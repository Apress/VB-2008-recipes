Imports System
Imports System.ComponentModel
Imports System.Windows.Forms
'  All designed code is stored in the autogenerated partial
'  class called Recipe04-03.Designer.vb.  You can see this
'  file by selecting "Show All Files" in solution explorer.
Partial Public Class Recipe04_03

    '  Instantiate the BackgroundWorker object
    Dim WithEvents worker As New BackgroundWorker
    Private Sub Recipe04_03_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        worker.WorkerReportsProgress = True
        worker.WorkerSupportsCancellation = True

    End Sub
    '  Button.Click event handler for the Start button, which
    '  starts the asynchronous operation.
    Private Sub btnStart_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStart.Click

        '  Configure the form controls.
        btnCancel.Enabled = True
        btnStart.Enabled = False
        progress.Visible = True
        progress.Maximum = 100
        progress.Value = 0

        '  Begin the background operation.
        worker.RunWorkerAsync()

    End Sub
    '  Button.Click event handler for the Cancel buton, which
    '  instructs the BackgroundWorker to terminate.
    Private Sub btnCancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancel.Click

        '  Instruct the BackgroundWorker to terminate
        worker.CancelAsync()

    End Sub
    '  BackroundWorker.DoWork event handler.  This is where the long running method
    '  that needs to run asynchronously should be executed.
    Private Sub worker_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles worker.DoWork

        '  Get the instance of the BackgroundWorker that raised the event.
        '  This is useful to do in case you have multiple BackgroundWorkers
        '  being handled by this event.
        Dim worker As BackgroundWorker = DirectCast(sender, BackgroundWorker)

        '  Perform a loop and pause the thread for 1 second
        '  to simulate a long running operation.
        For i As Integer = 1 To 10

            '  Check if the user requested the operation to
            '  be canceled.
            If worker.CancellationPending Then
                '  Cancel the event.
                e.Cancel = True
                Exit For
            Else
                '  Pause the thread to simulate some action occurring.
                System.Threading.Thread.Sleep(1000)

                '  Update the progress on the user interface.
                worker.ReportProgress(i * 10)
            End If
        Next

        '  Simulate returing some result back to the main thread.
        If Not e.Cancel Then e.Result = "Successful"

    End Sub
    '  BackroundWorker.ProgressChanged event handler.  This event is used to update
    '  the user interface, such as updating a progress bar.
    Private Sub worker_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles worker.ProgressChanged

        '  Update the Progress bar on the form.
        progress.Value = e.ProgressPercentage

    End Sub
    '  BackroundWorker.RunWorkerCompleted event handler.  This event is raised once
    '  BackgroundWorker.DoWork completes and should be used for finalization.
    Private Sub worker_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles worker.RunWorkerCompleted

        '  Check if an unhandled exception occurred in the DoWork event.
        If e.Error Is Nothing Then
            '  Check if DoWork was cancelled by the user.
            If Not e.Cancelled Then
                MessageBox.Show("Results:  " & e.Result.ToString)
            Else
                MessageBox.Show("Operation canceled by user")
            End If
        Else
            '  Display the exception.
            MessageBox.Show(e.Error.ToString)
        End If

        '  Reset form
        progress.Visible = False
        progress.Value = 0
        btnCancel.Enabled = False
        btnStart.Enabled = True

    End Sub

End Class
Imports System
Imports System.Drawing
Imports System.Windows.Forms
Imports System.Drawing.Drawing2D
'  All designed code is stored in the autogenerated partial
'  class called Recipe10-02.Designer.vb.  You can see this
'  file by selecting "Show All Files" in solution explorer.
Partial Public Class Recipe10_02

    '  Define the shapes used on this form.
    Private path As GraphicsPath
    Private rect As Rectangle

    '  Define the flags that track where the mouse pointer is.
    Private inPath As Boolean = False
    Private inRectangle As Boolean = False

    '  Define the brushes used for painting the shapes.
    Private highlightBrush As Brush = Brushes.HotPink
    Private defaultBrush As Brush = Brushes.LightBlue
    Private Sub Recipe10_02_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        '  Create the shapes that will be displayed.
        path = New GraphicsPath
        path.AddEllipse(10, 10, 100, 60)
        path.AddCurve(New Point() {New Point(50, 50), New Point(10, 33), New Point(80, 43)})
        path.AddLine(50, 120, 250, 80)
        path.AddLine(120, 40, 110, 50)
        path.CloseFigure()

        rect = New Rectangle(100, 170, 220, 170)

    End Sub
    Private Sub Recipe10_02_MouseMove(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Me.MouseMove

        Using g As Graphics = Me.CreateGraphics
            '  Perform hit testing with rectangle.
            If rect.Contains(e.X, e.Y) Then
                If Not inRectangle Then
                    inRectangle = True

                    '  Highlight the rectangle.
                    g.FillRectangle(highlightBrush, rect)
                    g.DrawRectangle(Pens.Black, rect)
                End If
            ElseIf inRectangle Then
                inRectangle = False

                '  Restore the unhighlighted rectangle.
                g.FillRectangle(defaultBrush, rect)
                g.DrawRectangle(Pens.Black, rect)
            End If

            '  Perform hit testing with path.
            If path.IsVisible(e.X, e.Y) Then
                If Not inPath Then
                    inPath = True

                    '  Highlight the path.
                    g.FillPath(highlightBrush, path)
                    g.DrawPath(Pens.Black, path)
                End If
            ElseIf inPath Then
                inPath = False

                '  Restore the unhighlighted path.
                g.FillPath(defaultBrush, path)
                g.DrawPath(Pens.Black, path)
            End If

        End Using

    End Sub
    Private Sub Recipe10_02_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles Me.Paint

        Dim g As Graphics = e.Graphics

        '  Paint the shapes according to the current selection.
        If inPath Then
            g.FillPath(highlightBrush, path)
            g.FillRectangle(defaultBrush, rect)
        ElseIf inRectangle Then
            g.FillRectangle(highlightBrush, rect)
            g.FillPath(defaultBrush, path)
        Else
            g.FillPath(defaultBrush, path)
            g.FillRectangle(defaultBrush, rect)
        End If

        g.DrawPath(Pens.Black, path)
        g.DrawRectangle(Pens.Black, rect)

    End Sub

End Class